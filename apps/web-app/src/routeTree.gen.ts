/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignUpImport } from './routes/sign-up'
import { Route as SignInImport } from './routes/sign-in'
import { Route as LayoutImport } from './routes/_layout'
import { Route as IndexImport } from './routes/index'
import { Route as LayoutAccountImport } from './routes/_layout.account'
import { Route as LayoutRecipesIndexImport } from './routes/_layout.recipes.index'
import { Route as LayoutFoodsIndexImport } from './routes/_layout.foods.index'
import { Route as LayoutRecipesNewImport } from './routes/_layout.recipes.new'
import { Route as LayoutRecipesRecipeIdImport } from './routes/_layout.recipes.$recipeId'
import { Route as LayoutFoodsNewImport } from './routes/_layout.foods.new'
import { Route as LayoutRecipesRecipeIdEditImport } from './routes/_layout.recipes_.$recipeId.edit'
import { Route as LayoutFoodsFoodIdEditImport } from './routes/_layout.foods_.$foodId.edit'

// Create/Update Routes

const SignUpRoute = SignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const SignInRoute = SignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutAccountRoute = LayoutAccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutRecipesIndexRoute = LayoutRecipesIndexImport.update({
  id: '/recipes/',
  path: '/recipes/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFoodsIndexRoute = LayoutFoodsIndexImport.update({
  id: '/foods/',
  path: '/foods/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutRecipesNewRoute = LayoutRecipesNewImport.update({
  id: '/recipes/new',
  path: '/recipes/new',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutRecipesRecipeIdRoute = LayoutRecipesRecipeIdImport.update({
  id: '/recipes/$recipeId',
  path: '/recipes/$recipeId',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFoodsNewRoute = LayoutFoodsNewImport.update({
  id: '/foods/new',
  path: '/foods/new',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutRecipesRecipeIdEditRoute = LayoutRecipesRecipeIdEditImport.update({
  id: '/recipes_/$recipeId/edit',
  path: '/recipes/$recipeId/edit',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFoodsFoodIdEditRoute = LayoutFoodsFoodIdEditImport.update({
  id: '/foods_/$foodId/edit',
  path: '/foods/$foodId/edit',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpImport
      parentRoute: typeof rootRoute
    }
    '/_layout/account': {
      id: '/_layout/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof LayoutAccountImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/foods/new': {
      id: '/_layout/foods/new'
      path: '/foods/new'
      fullPath: '/foods/new'
      preLoaderRoute: typeof LayoutFoodsNewImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/recipes/$recipeId': {
      id: '/_layout/recipes/$recipeId'
      path: '/recipes/$recipeId'
      fullPath: '/recipes/$recipeId'
      preLoaderRoute: typeof LayoutRecipesRecipeIdImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/recipes/new': {
      id: '/_layout/recipes/new'
      path: '/recipes/new'
      fullPath: '/recipes/new'
      preLoaderRoute: typeof LayoutRecipesNewImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/foods/': {
      id: '/_layout/foods/'
      path: '/foods'
      fullPath: '/foods'
      preLoaderRoute: typeof LayoutFoodsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/recipes/': {
      id: '/_layout/recipes/'
      path: '/recipes'
      fullPath: '/recipes'
      preLoaderRoute: typeof LayoutRecipesIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/foods_/$foodId/edit': {
      id: '/_layout/foods_/$foodId/edit'
      path: '/foods/$foodId/edit'
      fullPath: '/foods/$foodId/edit'
      preLoaderRoute: typeof LayoutFoodsFoodIdEditImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/recipes_/$recipeId/edit': {
      id: '/_layout/recipes_/$recipeId/edit'
      path: '/recipes/$recipeId/edit'
      fullPath: '/recipes/$recipeId/edit'
      preLoaderRoute: typeof LayoutRecipesRecipeIdEditImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutAccountRoute: typeof LayoutAccountRoute
  LayoutFoodsNewRoute: typeof LayoutFoodsNewRoute
  LayoutRecipesRecipeIdRoute: typeof LayoutRecipesRecipeIdRoute
  LayoutRecipesNewRoute: typeof LayoutRecipesNewRoute
  LayoutFoodsIndexRoute: typeof LayoutFoodsIndexRoute
  LayoutRecipesIndexRoute: typeof LayoutRecipesIndexRoute
  LayoutFoodsFoodIdEditRoute: typeof LayoutFoodsFoodIdEditRoute
  LayoutRecipesRecipeIdEditRoute: typeof LayoutRecipesRecipeIdEditRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutAccountRoute: LayoutAccountRoute,
  LayoutFoodsNewRoute: LayoutFoodsNewRoute,
  LayoutRecipesRecipeIdRoute: LayoutRecipesRecipeIdRoute,
  LayoutRecipesNewRoute: LayoutRecipesNewRoute,
  LayoutFoodsIndexRoute: LayoutFoodsIndexRoute,
  LayoutRecipesIndexRoute: LayoutRecipesIndexRoute,
  LayoutFoodsFoodIdEditRoute: LayoutFoodsFoodIdEditRoute,
  LayoutRecipesRecipeIdEditRoute: LayoutRecipesRecipeIdEditRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof LayoutRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/account': typeof LayoutAccountRoute
  '/foods/new': typeof LayoutFoodsNewRoute
  '/recipes/$recipeId': typeof LayoutRecipesRecipeIdRoute
  '/recipes/new': typeof LayoutRecipesNewRoute
  '/foods': typeof LayoutFoodsIndexRoute
  '/recipes': typeof LayoutRecipesIndexRoute
  '/foods/$foodId/edit': typeof LayoutFoodsFoodIdEditRoute
  '/recipes/$recipeId/edit': typeof LayoutRecipesRecipeIdEditRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof LayoutRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/account': typeof LayoutAccountRoute
  '/foods/new': typeof LayoutFoodsNewRoute
  '/recipes/$recipeId': typeof LayoutRecipesRecipeIdRoute
  '/recipes/new': typeof LayoutRecipesNewRoute
  '/foods': typeof LayoutFoodsIndexRoute
  '/recipes': typeof LayoutRecipesIndexRoute
  '/foods/$foodId/edit': typeof LayoutFoodsFoodIdEditRoute
  '/recipes/$recipeId/edit': typeof LayoutRecipesRecipeIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/_layout/account': typeof LayoutAccountRoute
  '/_layout/foods/new': typeof LayoutFoodsNewRoute
  '/_layout/recipes/$recipeId': typeof LayoutRecipesRecipeIdRoute
  '/_layout/recipes/new': typeof LayoutRecipesNewRoute
  '/_layout/foods/': typeof LayoutFoodsIndexRoute
  '/_layout/recipes/': typeof LayoutRecipesIndexRoute
  '/_layout/foods_/$foodId/edit': typeof LayoutFoodsFoodIdEditRoute
  '/_layout/recipes_/$recipeId/edit': typeof LayoutRecipesRecipeIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/sign-in'
    | '/sign-up'
    | '/account'
    | '/foods/new'
    | '/recipes/$recipeId'
    | '/recipes/new'
    | '/foods'
    | '/recipes'
    | '/foods/$foodId/edit'
    | '/recipes/$recipeId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/sign-in'
    | '/sign-up'
    | '/account'
    | '/foods/new'
    | '/recipes/$recipeId'
    | '/recipes/new'
    | '/foods'
    | '/recipes'
    | '/foods/$foodId/edit'
    | '/recipes/$recipeId/edit'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/sign-in'
    | '/sign-up'
    | '/_layout/account'
    | '/_layout/foods/new'
    | '/_layout/recipes/$recipeId'
    | '/_layout/recipes/new'
    | '/_layout/foods/'
    | '/_layout/recipes/'
    | '/_layout/foods_/$foodId/edit'
    | '/_layout/recipes_/$recipeId/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRouteWithChildren
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRouteWithChildren,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout",
        "/sign-in",
        "/sign-up"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/account",
        "/_layout/foods/new",
        "/_layout/recipes/$recipeId",
        "/_layout/recipes/new",
        "/_layout/foods/",
        "/_layout/recipes/",
        "/_layout/foods_/$foodId/edit",
        "/_layout/recipes_/$recipeId/edit"
      ]
    },
    "/sign-in": {
      "filePath": "sign-in.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up.tsx"
    },
    "/_layout/account": {
      "filePath": "_layout.account.tsx",
      "parent": "/_layout"
    },
    "/_layout/foods/new": {
      "filePath": "_layout.foods.new.tsx",
      "parent": "/_layout"
    },
    "/_layout/recipes/$recipeId": {
      "filePath": "_layout.recipes.$recipeId.tsx",
      "parent": "/_layout"
    },
    "/_layout/recipes/new": {
      "filePath": "_layout.recipes.new.tsx",
      "parent": "/_layout"
    },
    "/_layout/foods/": {
      "filePath": "_layout.foods.index.tsx",
      "parent": "/_layout"
    },
    "/_layout/recipes/": {
      "filePath": "_layout.recipes.index.tsx",
      "parent": "/_layout"
    },
    "/_layout/foods_/$foodId/edit": {
      "filePath": "_layout.foods_.$foodId.edit.tsx",
      "parent": "/_layout"
    },
    "/_layout/recipes_/$recipeId/edit": {
      "filePath": "_layout.recipes_.$recipeId.edit.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
