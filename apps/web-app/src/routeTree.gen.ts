/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as IndexImport } from './routes/index'
import { Route as LayoutAccountImport } from './routes/_layout.account'
import { Route as LayoutRecipesIndexImport } from './routes/_layout.recipes.index'
import { Route as LayoutRecipesNewImport } from './routes/_layout.recipes.new'
import { Route as LayoutRecipesRecipeIdImport } from './routes/_layout.recipes.$recipeId'
import { Route as LayoutRecipesRecipeIdEditImport } from './routes/_layout.recipes_.$recipeId.edit'

// Create Virtual Routes

const SignUpLazyImport = createFileRoute('/sign-up')()
const SignInLazyImport = createFileRoute('/sign-in')()

// Create/Update Routes

const SignUpLazyRoute = SignUpLazyImport.update({
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sign-up.lazy').then((d) => d.Route))

const SignInLazyRoute = SignInLazyImport.update({
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sign-in.lazy').then((d) => d.Route))

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutAccountRoute = LayoutAccountImport.update({
  path: '/account',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutRecipesIndexRoute = LayoutRecipesIndexImport.update({
  path: '/recipes/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutRecipesNewRoute = LayoutRecipesNewImport.update({
  path: '/recipes/new',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutRecipesRecipeIdRoute = LayoutRecipesRecipeIdImport.update({
  path: '/recipes/$recipeId',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutRecipesRecipeIdEditRoute = LayoutRecipesRecipeIdEditImport.update({
  path: '/recipes/$recipeId/edit',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInLazyImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout/account': {
      id: '/_layout/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof LayoutAccountImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/recipes/$recipeId': {
      id: '/_layout/recipes/$recipeId'
      path: '/recipes/$recipeId'
      fullPath: '/recipes/$recipeId'
      preLoaderRoute: typeof LayoutRecipesRecipeIdImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/recipes/new': {
      id: '/_layout/recipes/new'
      path: '/recipes/new'
      fullPath: '/recipes/new'
      preLoaderRoute: typeof LayoutRecipesNewImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/recipes/': {
      id: '/_layout/recipes/'
      path: '/recipes'
      fullPath: '/recipes'
      preLoaderRoute: typeof LayoutRecipesIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/recipes/$recipeId/edit': {
      id: '/_layout/recipes/$recipeId/edit'
      path: '/recipes/$recipeId/edit'
      fullPath: '/recipes/$recipeId/edit'
      preLoaderRoute: typeof LayoutRecipesRecipeIdEditImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  LayoutRoute: LayoutRoute.addChildren({
    LayoutAccountRoute,
    LayoutRecipesRecipeIdRoute,
    LayoutRecipesNewRoute,
    LayoutRecipesIndexRoute,
    LayoutRecipesRecipeIdEditRoute,
  }),
  SignInLazyRoute,
  SignUpLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout",
        "/sign-in",
        "/sign-up"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/account",
        "/_layout/recipes/$recipeId",
        "/_layout/recipes/new",
        "/_layout/recipes/",
        "/_layout/recipes/$recipeId/edit"
      ]
    },
    "/sign-in": {
      "filePath": "sign-in.lazy.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up.lazy.tsx"
    },
    "/_layout/account": {
      "filePath": "_layout.account.tsx",
      "parent": "/_layout"
    },
    "/_layout/recipes/$recipeId": {
      "filePath": "_layout.recipes.$recipeId.tsx",
      "parent": "/_layout"
    },
    "/_layout/recipes/new": {
      "filePath": "_layout.recipes.new.tsx",
      "parent": "/_layout"
    },
    "/_layout/recipes/": {
      "filePath": "_layout.recipes.index.tsx",
      "parent": "/_layout"
    },
    "/_layout/recipes/$recipeId/edit": {
      "filePath": "_layout.recipes_.$recipeId.edit.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
