model Recipe {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now()) @map("created_at")

  userId String @map("user_id") @db.Uuid
  user   User   @relation(fields: [userId], references: [id])

  name        String
  description String?

  /// Amount in seconds
  cookTime Int? @map("cook_time")
  /// Amount in seconds
  prepTime Int? @map("prep_time")

  originalUrl String? @map("original_url")

  ingredients       Ingredient[]
  instructionGroups InstructionGroup[]

  usesRecipes   LinkedRecipes[] @relation("UsesRecipes")
  usedByRecipes LinkedRecipes[] @relation("Recipes")

  images RecipeImage[]

  tags RecipeTag[]

  @@map("recipes")
}

model RecipeImage {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now()) @map("created_at")

  recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId String @map("recipe_id") @db.Uuid

  image   Image  @relation(fields: [imageId], references: [id])
  imageId String @map("image_id") @db.Uuid

  favorite Boolean?

  @@map("recipe_images")
}

enum Unit {
  // Metric weight
  milligram
  gram
  kilogram
  // Imperial weight
  ounce
  pound
  // Metric volume
  mililiter
  centiliter
  deciliter
  liter
  // Imperial volume
  teaspoon
  tablespoon
  cup
  fluidOunce @map("fluid_ounce")
  pint
  quart
  gallon
  // Misc
  clove
  whole
  slice
  drop
  dash
  stick
  piece
  bottle
  can
  packet
  pinch
  bunch
}

// Pivot table
/// Ingredients are parts of recipes that combine a food, a unit, and an amount.
model Ingredient {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now()) @map("created_at")

  recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId String @map("recipe_id") @db.Uuid

  amount Decimal?

  unit Unit?

  food   Food   @relation(fields: [foodId], references: [id])
  foodId String @map("food_id") @db.Uuid

  notes String?

  @@map("ingredients")
}

model InstructionGroup {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now()) @map("created_at")

  title String?
  sort  String

  recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId String @map("recipe_id") @db.Uuid

  instructions Instruction[]

  @@map("instruction_groups")
}

model Instruction {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now()) @map("created_at")

  text String
  step Int

  instructionGroup   InstructionGroup @relation(fields: [instructionGroupId], references: [id], onDelete: Cascade)
  instructionGroupId String           @map("instruction_group_id") @db.Uuid

  @@map("instructions")
}

// Pivot table
model LinkedRecipes {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now()) @map("created_at")

  recipe       Recipe @relation("Recipes", fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId     String @map("recipe_id") @db.Uuid
  usesRecipe   Recipe @relation("UsesRecipes", fields: [usesRecipeId], references: [id])
  usesRecipeId String @map("linked_recipe") @db.Uuid

  @@map("linked_recipes")
}

model RecipeTag {
  recipeId String @map("recipe_id") @db.Uuid
  tagId    String @map("tag_id") @db.Uuid

  recipe Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  tag    Tag    @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([recipeId, tagId])
  @@map("recipe_tags")
}
